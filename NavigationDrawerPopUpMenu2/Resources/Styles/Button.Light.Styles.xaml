<!--
Copyright (c) 2015 Ratish Philip 


Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal 
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is 
furnished to do so, subject to the following conditions: 


The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software. 


THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. 
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <sys:Double x:Key="IconGlyphLargeFontSize">18</sys:Double>
    <Style TargetType="TextBlock"
           x:Key="IconGlyph.Light.TextBlockStyle">
        <Setter Property="SnapsToDevicePixels"
                Value="True"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Segoe MDL2 Assets" />
        <Setter Property="FontWeight"
                Value="Light"></Setter>
        <Setter Property="FontSize"
                Value="{StaticResource IconGlyphLargeFontSize}" />
    </Style>

    <SolidColorBrush x:Key="Button.Light.Static.Background"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Button.Light.Static.Foreground"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Button.Light.Static.Border"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Button.Light.MouseOver.Background"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Button.Light.MouseOver.Border"
                     Color="White" />
    <SolidColorBrush x:Key="Button.Light.Pressed.Background"
                     Color="White" />
    <SolidColorBrush x:Key="Button.Light.Pressed.Foreground"
                     Color="Black" />
    <SolidColorBrush x:Key="Button.Light.Pressed.Border"
                     Color="White" />
    <SolidColorBrush x:Key="Button.Light.Disabled.Background"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Button.Light.Disabled.Border"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Button.Light.Disabled.Foreground"
                     Color="#FF5A5A5A" />
    <Style x:Key="IconGlyph.Light.ButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Background"
                Value="{StaticResource Button.Light.Static.Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Button.Light.Static.Border}" />
        <Setter Property="Foreground"
                Value="{StaticResource Button.Light.Static.Foreground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <TextBlock x:Name="textContent"
                                       Focusable="False"
                                       Text="{TemplateBinding Content}"
                                       Style="{StaticResource IconGlyph.Light.TextBlockStyle}"
                                       Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Light.MouseOver.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Light.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Light.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Light.Pressed.Border}" />
                            <Setter Property="Foreground"
                                    TargetName="textContent"
                                    Value="{StaticResource Button.Light.Pressed.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Light.Disabled.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Light.Disabled.Border}" />
                            <Setter Property="Foreground"
                                    TargetName="textContent"
                                    Value="{StaticResource Button.Light.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>